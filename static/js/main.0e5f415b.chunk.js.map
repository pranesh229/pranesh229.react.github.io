{"version":3,"sources":["tab/tab.tsx","footer/footer.tsx","about-me/about-me.service.ts","skills/skills.tsx","specialization/specialization.tsx","about-me/about-me.tsx","resume/resume.service.ts","resume/resume.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Tab","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react","id","role","className","react_router_dom","to","React","Footer","href","AboutMeService","serviceURL","aboutmeData","Promise","res","reg","window","navigator","onLine","fetch","then","response","json","result","localForage","setItem","catch","err","console","log","getItem","error","fields","description","specialization","skills","Skills","react_markdown_default","a","source","Specialization","specializationObj","map","obj","index","key","Card","CardContent","lib_default","height","src","imageURL","alt","Typography","title","AboutMe","aboutMeDescription","aboutMeService","getAboutMeData","setState","getAboutMeDescription","getSkills","getSpecializationArryObj","skills_Skills","specialization_Specialization","ResumeService","Resume","resume","getResume","App","document","getElementsByClassName","style","display","react_default","createElement","tab_Tab","react_router","path","exact","component","footer_Footer","Component","Boolean","location","hostname","match","ReactDOM","render","App_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e5f415b.chunk.js","sourcesContent":["import * as React from 'react';\nimport './tab.scss';\nimport { Link } from 'react-router-dom';\nexport interface ITabProps {}\n\nexport interface ITabState {}\n\nexport default class Tab extends React.Component<ITabProps, ITabState> {\n  constructor(props: ITabProps) {\n    super(props);\n\n    this.state = {};\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <header id=\"fh5co-header\" role=\"banner\">\n          <div className=\"container\">\n            <div className=\"header-inner\">\n              <nav\n                role=\"navigation\"\n                className=\"d-none d-md-block d-lg-block d-xl-block\"\n              >\n                <ul>\n                  <li>\n                    <Link to=\"/\">Home</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/resume\">Resume</Link>\n                  </li>\n                </ul>\n              </nav>\n              <nav id=\"navigation\" className=\"d-md-none d-lg-none d-xl-none\">\n                <div className=\"hamburger hamburger--spin\">\n                  <div className=\" hamburger-box \">\n                    <div className=\"hamburger-inner \" />\n                  </div>\n                </div>\n\n                <div className=\"\">\n                  <ul>\n                    <li>\n                      <Link to=\"/\">Home</Link>\n                    </li>\n                    <li>\n                      <Link to=\"/resume\">Resume</Link>\n                    </li>\n                  </ul>\n                </div>\n              </nav>\n            </div>\n          </div>\n        </header>\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\nimport './footer.scss';\nexport interface IFooterProps {}\n\nexport default class Footer extends React.Component<IFooterProps> {\n  public render() {\n    return (\n      <div className=\"footerArea\">\n        This Progressive Web App was developed using\n        <a href=\"https://angular.io/\">Angular</a>, styled with\n        <a href=\"https://material.angular.io/\">Material Design</a> and\n        <a href=\"https://github.com/twbs/bootstrap-sass\">Bootstrap</a>. Content\n        managed in <a href=\"www.contentful.com\">Contentful.</a> Continous\n        integration is done using <a href=\"https://travis-ci.org/\">Travis-CI</a>\n        .\n      </div>\n    );\n  }\n}\n","import localForage from 'localforage';\nexport default class AboutMeService {\n  serviceURL =\n    'https://cdn.contentful.com/spaces/hgjyi5lurih3/environments/master/entries/557E2oqinYcsgIi4EegKaW' +\n    '?access_token=b3b3b518c7649017f733b6eaf64952902296ac159f37fc1a30223666fe1c9412';\n  aboutmeData: any;\n  constructor() {}\n  getAboutMeData() {\n    return new Promise((res, reg) => {\n      if (window.navigator.onLine) {\n        fetch(this.serviceURL)\n          .then(response => response.json())\n          .then(result => {\n            this.aboutmeData = result;\n            localForage.setItem('aboutmeData', result);\n            res(true);\n          })\n          .catch(err => {\n            console.log(err);\n            reg(false);\n          });\n      } else {\n        localForage\n          .getItem('aboutmeData')\n          .then(response => {\n            if (!response) {\n              console.error('no Data');\n              reg(false);\n            } else {\n              this.aboutmeData = response;\n              res(true);\n            }\n          })\n          .catch(error => {\n            console.log(error);\n            reg(false);\n          });\n      }\n    });\n  }\n  getAboutMeDescription(): string {\n    return this.aboutmeData.fields.description;\n  }\n  getSpecializationArryObj(): Specialization[] {\n    return this.aboutmeData.fields.specialization;\n  }\n  getSkills(): string {\n    return this.aboutmeData.fields.skills;\n  }\n}\ninterface Specialization {\n  title?: string;\n  detail?: string;\n  imageURL?: string;\n}\n","import * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\nexport interface ISkillsProps {\n  skills: string;\n}\n\nexport interface ISkillsState {}\n\nexport default class Skills extends React.Component<\n  ISkillsProps,\n  ISkillsState\n> {\n  constructor(props: ISkillsProps) {\n    super(props);\n\n    this.state = {};\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <div className=\"col-md-offset-3 fh5co-heading\">\n          <h2>Skills and Experience</h2>\n        </div>\n        <ReactMarkdown source={this.props.skills} />\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\nimport Card from '@material-ui/core/Card';\nimport LazyLoad from 'react-lazyload';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport './specialization.scss';\nexport interface ISpecializationProps {\n  specializationObj: any[];\n}\n\nexport interface ISpecializationState {}\nexport default class Specialization extends React.Component<\n  ISpecializationProps,\n  ISpecializationState\n> {\n  constructor(props: ISpecializationProps) {\n    super(props);\n\n    this.state = {};\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          <div className=\"col-md-offset-3 fh5co-heading\">\n            <h2>Tools and Technologies</h2>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"about-inner\">\n              <div className=\"row\">\n                {this.props.specializationObj.map((obj: any, index: number) => {\n                  return (\n                    <div key={index} className=\"col-md-6 col-xs-12 col-sm-12\">\n                      <Card className=\"specialization-card\">\n                        <CardContent>\n                          <div>\n                            <LazyLoad height={40}>\n                              <img\n                                src={obj.imageURL + '?w=40&h=40'}\n                                alt=\"\"\n                                className=\"specialization-card-image\"\n                              />\n                            </LazyLoad>\n                          </div>\n                          <Typography>{obj.title}</Typography>\n                        </CardContent>\n                      </Card>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\nimport './about-me.scss';\nimport AboutMeService from './about-me.service';\nimport Skills from '../skills/skills';\nimport Specialization from '../specialization/specialization';\n\nexport interface IAboutMeProps {}\nexport interface IAboutMeState {\n  aboutMeDescription: string;\n  skills: string;\n  specializationObj: any;\n}\nexport default class AboutMe extends React.Component<\n  IAboutMeProps,\n  IAboutMeState\n> {\n  componentDidMount() {}\n  constructor(props: IAboutMeProps) {\n    super(props);\n    this.state = {\n      aboutMeDescription: '',\n      skills: '',\n      specializationObj: {}\n    };\n    let aboutMeService = new AboutMeService();\n    aboutMeService.getAboutMeData().then(response => {\n      this.setState({\n        aboutMeDescription: aboutMeService.getAboutMeDescription(),\n        skills: aboutMeService.getSkills(),\n        specializationObj: aboutMeService.getSpecializationArryObj()\n      });\n    });\n  }\n\n  public render() {\n    return (\n      <div id=\"fh5co-about-section\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 col-md-offset-3 fh5co-heading\">\n              <h2>About Me</h2>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"about-inner\">\n                {this.state.aboutMeDescription ? (\n                  <p>{this.state.aboutMeDescription}</p>\n                ) : null}\n              </div>\n            </div>\n          </div>\n          {this.state.skills ? (\n            <div>\n              <Skills skills={this.state.skills} />\n              <Specialization\n                specializationObj={this.state.specializationObj}\n              />\n            </div>\n          ) : null}\n\n          {/* <app-skills *ngIf=\"skills\" [skills]=skills></app-skills>\n          <app-specialization *ngIf=\"specializationObj\" [specializationObj]=specializationObj></app-specialization> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import localForage from 'localforage';\nexport default class ResumeService {\n  serviceURL =\n    'https://cdn.contentful.com/spaces/hgjyi5lurih3/environments/master/entries/1nDLOS0AkEuUUyy4CE6SsO' +\n    '?access_token=b3b3b518c7649017f733b6eaf64952902296ac159f37fc1a30223666fe1c9412';\n  constructor() {}\n  getResume() {\n    return new Promise((res, reg) => {\n      if (window.navigator.onLine) {\n        fetch(this.serviceURL)\n          .then(response => response.json())\n          .then(result => {\n            localForage.setItem('resumeData', result);\n            res(result);\n          })\n          .catch(err => {\n            console.log(err);\n            reg(err);\n          });\n      } else {\n        localForage\n          .getItem('resumeData')\n          .then(response => {\n            if (!response) {\n              console.error('no data');\n              reg('no data');\n            } else {\n              res(response);\n            }\n          })\n          .catch(error => {\n            console.error(error);\n            reg(error);\n          });\n      }\n    });\n  }\n}\n","import * as React from 'react';\nimport './resume.scss';\nimport ResumeService from './resume.service';\nimport ReactMarkdown from 'react-markdown';\nexport interface IResumeProps {}\n\nexport interface IResumeState {\n  resume: string;\n}\n\nexport default class Resume extends React.Component<\n  IResumeProps,\n  IResumeState\n> {\n  constructor(props: IResumeProps) {\n    super(props);\n\n    this.state = {\n      resume: ''\n    };\n    let resumeService = new ResumeService();\n    resumeService.getResume().then((result: any) => {\n      this.setState({ resume: result.fields.resume });\n    });\n  }\n\n  public render() {\n    return (\n      <div>\n        <ReactMarkdown source={this.state.resume} />\n      </div>\n    );\n  }\n}\n","import './App.scss';\nimport React, { Component } from 'react';\nimport Tab from './tab/tab';\nimport Footer from './footer/footer';\nimport AboutMe from './about-me/about-me';\nimport { Route, HashRouter } from 'react-router-dom';\nimport Resume from './resume/resume';\n\nexport default class App extends Component {\n  componentDidMount() {\n    (document as any).getElementsByClassName('lds-facebook')[0].style.display =\n      'none';\n  }\n  render() {\n    return (\n      <HashRouter>\n        <Tab />\n        <Route path=\"/\" exact component={AboutMe} />\n        <Route path=\"/resume\" component={Resume} />\n        <Footer />\n      </HashRouter>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}